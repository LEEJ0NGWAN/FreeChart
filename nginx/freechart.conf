# 0.
# $ sudo apt-get update
# $ sudo apt-get install software-properties-common
# $ sudo add-apt-repository universe
# $ sudo add-apt-repository ppa:certbot/certbot
# $ sudo apt-get update

# 1. /etc/hosts에 freechart 추가
# 127.0.0.1     freechart


# FOR HTTPS
# 2. ssl for http2(&https)
# # SSL directory (기본 nginx가 깔린 폴더 안에 ssl 폴더 설정)
# mkdir /etc/nginx/ssl [nginx 기본 경로]
# mkdir /usr/local/etc/nginx/ssl [nginx가 brew 설치인 경우]
# # SSL certi & private key (nginx 폴더에 따라 요령것 바꾸면 됨)
# openssl req -x509 -sha256 -nodes -newkey rsa:2048 -days 365 -keyout /usr/local/etc/nginx/ssl/self.key -out /usr/local/etc/nginx/ssl/self.crt
# # 로컬호스트에서 해당 ssl 인증서 야매로 신뢰
# sudo security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /usr/local/etc/nginx/ssl/self.crt
# # dhparam.pem
# openssl dhparam 2048 -out /usr/local/etc/nginx/ssl/dhparam.pem

# HTTPS
# upstream api {
#         server back:8000;
# }
# include mime.types;

# # HTTPS로 리디렉션
# server {
#         listen 8080;
#         server_name freechart.tk;
#         return 301 https://$host$request_uri;
# }

# server {
#         # https port;
#         listen 443 ssl http2;

#         server_name freechart.tk;

#         # SSL key 설정 (키 생성한 경로에 따라서 알아서 잘 설정할 것)
#         # SSL crt
#         # ssl_certificate /etc/nginx/ssl/self.crt;
#         # SSL key
#         # ssl_certificate_key /etc/nginx/ssl/self.key;

#         # SSL protocol
#         ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

#         # cipher suits
#         # 협상 시 서버 슈트 순서를 우선
#         ssl_prefer_server_ciphers on;
#         # 암호화 알고리즘
#         ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
#         # 헬만 파라매터 
#         # (client와 server간의 key를 exchange할 때 perfect security를 보장 위함)
#         ssl_dhparam /etc/nginx/ssl/dhparam.pem;
#         # Enable HSTS (redirect request의 최소화)
#         add_header Strict-Transport-Security "max-age=31536000" always;
#         # add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
#         add_header X-Content-Type-Options nosniff;

#         # SSL sessions
#         ssl_session_cache shared:SSL:40m;
#         ssl_session_timeout 4h;
#         ssl_session_tickets on;
#         # ssl 관련 모듈
#         ssl_ecdh_curve secp384r1;

#         # 이상한 흑마법
#         ssl_stapling on;
#         ssl_stapling_verify on;

#         # 구글 DNS resolver
#         resolver 8.8.8.8 8.8.4.4; ## 구글이 제공하는 네임서버로 인증서 발급업체와 통신

#         # 저주받은 사탄 엔지닉스 대마왕
#         index index.html;
        
#         location / {
#                 root /var/www/front;
#                 try_files $uri $uri/ /index.html;
#         }

#         # ignore cache frontend
#         location ~* (service-worker\.js)$ {
#                 add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
#                 expires off;
#                 proxy_no_cache 1;
#         }

#         location /api/ {
#                 rewrite ^/api(/.*)$ $1 break;
#                 proxy_pass http://api;
#                 proxy_connect_timeout 300;
#                 proxy_send_timeout 300;
#                 proxy_read_timeout 300;
#                 send_timeout 300;
#         }
# }


# legacy
upstream api {
        server back:8000;
}

server {
        listen 8080;

        # index index.html;

        # server_name freechart.tk;

        resolver 8.8.8.8;

        location / {
                root /var/www/front;
                try_files $uri $uri/ /index.html;
        }

        # ignore cache frontend
        location ~* (service-worker\.js)$ {
                add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
                expires off;
                proxy_no_cache 1;
        }

        location /api/ {
		rewrite ^/api(/.*)$ $1 break;
                proxy_pass http://api;
                proxy_connect_timeout 300;
                proxy_send_timeout 300;
                proxy_read_timeout 300;
                send_timeout 300;
        }
}

